# application.yml (contact-service)
server:
  port: 8082

spring:
  application:
    name: contact-service

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/contact_db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    hikari:
      maximum-pool-size: ${SPRING_DATASOURCE_MAX_POOL:10}

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Use spring.redis (NOT spring.data.redis) for simple host/port/password/ssl
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    password: ${SPRING_REDIS_PASSWORD:}
    ssl: ${SPRING_REDIS_SSL:false}   # boolean, do NOT put it under spring.data.redis.ssl

kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
  instance:
    hostname: ${EUREKA_HOSTNAME:localhost}
    prefer-ip-address: false
    instance-id: ${spring.application.name}:${server.port}
